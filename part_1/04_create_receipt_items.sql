/*
I ran SELECT rewardsreceiptitemlist FROM receipts to check out all the data in the variant field
and put it into excel to parse out all the keys and then created another table for all the receipt 
items and populated it from the variant column
*/
--snowsight
CREATE OR REPLACE TABLE receipt_items (
    id NUMBER autoincrement start 1 increment 1,
    receipt_id VARCHAR(50),
    barcode VARCHAR(50),
    description VARCHAR(300),
    finalPrice DECIMAL(10,2),
    itemPrice DECIMAL(10,2),
    discountedItemPrice DECIMAL(10,2),
    originalFinalPrice DECIMAL(10,2),
    targetPrice DECIMAL(10,2),
    priceAfterCoupon DECIMAL(10,2),
    quantityPurchased INT,
    needsFetchReview BOOLEAN,
    needsFetchReviewReason VARCHAR(100),
    partnerItemId INT,
    itemNumber VARCHAR(50),
    pointsEarned DECIMAL(10,2),
    pointsNotAwardedReason VARCHAR(200),
    pointsPayerId VARCHAR(50),
    preventTargetGapPoints BOOLEAN,
    rewardsGroup VARCHAR(100),
    rewardsProductPartnerId VARCHAR(50),
    userFlaggedBarcode VARCHAR(50),
    userFlaggedDescription VARCHAR(200),
    userFlaggedNewItem BOOLEAN,
    userFlaggedPrice DECIMAL(10,2),
    userFlaggedQuantity INT,
    brandCode VARCHAR(50),
    competitiveProduct BOOLEAN,
    competitorRewardsGroup VARCHAR(100),
    originalReceiptItemText VARCHAR(300),
    originalMetaBriteBarcode VARCHAR(50),
    originalMetaBriteDescription VARCHAR(200),
    originalMetaBriteQuantityPurchased INT,
    originalMetaBriteItemPrice DECIMAL(10,2),
    metabriteCampaignId VARCHAR(300),
    deleted BOOLEAN
);


INSERT INTO receipt_items (
    receipt_id,
    barcode,
    description,
    finalPrice,
    itemPrice,
    discountedItemPrice,
    originalFinalPrice,
    targetPrice,
    priceAfterCoupon,
    quantityPurchased,
    needsFetchReview,
    needsFetchReviewReason,
    partnerItemId,
    itemNumber,
    pointsEarned,
    pointsNotAwardedReason,
    pointsPayerId,
    preventTargetGapPoints,
    rewardsGroup,
    rewardsProductPartnerId,
    userFlaggedBarcode,
    userFlaggedDescription,
    userFlaggedNewItem,
    userFlaggedPrice,
    userFlaggedQuantity,
    brandCode,
    competitiveProduct,
    competitorRewardsGroup,
    originalReceiptItemText,
    originalMetaBriteBarcode,
    originalMetaBriteDescription,
    originalMetaBriteQuantityPurchased,
    originalMetaBriteItemPrice,
    metabriteCampaignId,
    deleted
)
SELECT 
    r._id,
    i.value:barcode::VARCHAR(50) as barcode,
    i.value:description::VARCHAR(300) as description,
    i.value:finalPrice::DECIMAL(10,2) as final_price,
    i.value:itemPrice::DECIMAL(10,2) as item_price,
    i.value:discountedItemPrice::DECIMAL(10,2),
    i.value:originalFinalPrice::DECIMAL(10,2),
    i.value:targetPrice::DECIMAL(10,2),
    i.value:priceAfterCoupon::DECIMAL(10,2),
    i.value:quantityPurchased::INT,
    i.value:needsFetchReview::BOOLEAN,
    i.value:needsFetchReviewReason::VARCHAR(100),
    i.value:partnerItemId::INT,
    i.value:itemNumber::VARCHAR(50),
    i.value:pointsEarned::DECIMAL(10,2),
    i.value:pointsNotAwardedReason::VARCHAR(200),
    i.value:pointsPayerId::VARCHAR(50),
    i.value:preventTargetGapPoints::BOOLEAN,
    i.value:rewardsGroup::VARCHAR(100),
    i.value:rewardsProductPartnerId::VARCHAR(50),
    i.value:userFlaggedBarcode::VARCHAR(50),
    i.value:userFlaggedDescription::VARCHAR(200),
    i.value:userFlaggedNewItem::BOOLEAN,
    i.value:userFlaggedPrice::DECIMAL(10,2),
    i.value:userFlaggedQuantity::INT,
    i.value:brandCode::VARCHAR(50),
    i.value:competitiveProduct::BOOLEAN,
    i.value:competitorRewardsGroup::VARCHAR(100),
    i.value:originalReceiptItemText::VARCHAR(300),
    i.value:originalMetaBriteBarcode::VARCHAR(50),
    i.value:originalMetaBriteDescription::VARCHAR(200),
    i.value:originalMetaBriteQuantityPurchased::INT,
    i.value:originalMetaBriteItemPrice::DECIMAL(10,2),
    i.value:metabriteCampaignId::VARCHAR(300),
    i.value:deleted::BOOLEAN
FROM receipts r,
LATERAL FLATTEN(input => rewardsReceiptItemList) i